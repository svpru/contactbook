#pragma once
#include <eosio/testing/tester.hpp>

namespace eosio { namespace testing {

struct contracts {


   static std::vector<uint8_t> contactbook_wasm() { return read_wasm("${CMAKE_BINARY_DIR}/../contactbook/contactbook.wasm"); }
   static std::string          contactbook_wast() { return read_wast("${CMAKE_BINARY_DIR}/../contactbook/contactbook.wast"); }
   static std::vector<char>    contactbook_abi() { return read_abi("${CMAKE_BINARY_DIR}/../contactbook/contactbook.abi"); }



   struct util {
      static std::vector<uint8_t> test_api_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/test_api.wasm"); }

      static std::vector<uint8_t> exchange_wasm() { return read_wasm("${CMAKE_SOURCE_DIR}/test_contracts/exchange.wasm"); }
     
   };
};
}} //ns eosio::testing
